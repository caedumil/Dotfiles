#
# Caedus theme
#
# Once a fork of Minimal theme (https://github.com/S1cK94/minimal)
# Now a complete rewrite (since 15 Jan 2016)
#
#
# Colors
#    0 - black
#    1 - red
#    2 - green
#    3 - yellow
#    4 - blue
#    5 - magenta
#    6 - cyan
#    7 - white
#    8 - bright black
#    9 - bright red
#   10 - bright green
#   11 - bright yellow
#   12 - bright blue
#   13 - bright magenta
#   14 - bright cyan
#   15 - bright white
#

prompt_caedus_remote() {
    local user_c="%F{9}"
    local host_c="%F{1}"

    [[ -n ${SSH_TTY} ]] && print " ${user_c}%n%f ${stop} ${host_c}%m%f ${stop}"
}

prompt_caedus_path() {
    local -a wd
    local path_c="%F{4}"
    local sep_c="%F{8}"
    local sep="${sep_c}/${path_c}"

    for d in "${(s:/:)${PWD/#$HOME/~}}"; do
        if [[ ${#d} -gt 10 ]]; then
            d="${d:0:3}…"
        fi

        wd+="${d}"
    done

    print " ${path_c}$(sed "s_/_${sep}_g" <<< ${(j:/:)wd})%f ${stop}"
}

prompt_caedus_git() {
    local sep_c="%F{8}"

    if [[ -n ${vcs_info_msg_0_} ]]; then
        print " $(sed -r "s_(:|\[|\]|\|)+_${sep_c}\1%f_g" <<< ${vcs_info_msg_0_}) ${stop}"
    fi
}

+vi-git-branch() {
    local bracket_c="%F{2}"
    local status_c="%F{6}"
    local ahead behind
    local -a gitstatus

    ahead=$(git rev-list --count ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null)
    (( $ahead )) && gitstatus+=( "⇡${ahead}" )

    behind=$(git rev-list --count HEAD..${hook_com[branch]}@{upstream} 2>/dev/null)
    (( $behind )) && gitstatus+=( "⇣${behind}" )

    if (( ${#gitstatus[@]} )); then
        hook_com[branch]+="${bracket_c}(%f${status_c}${(j:/:)gitstatus}%f${bracket_c})%f"
    fi
}

+vi-git-stash() {
    if [[ -s ${hook_com[base]}/.git/refs/stash ]]; then
        hook_com[unstaged]+="±${hook_com[unstaged]}"
    fi
}

+vi-git-dirty() {
    local -i untracked

    untracked=$(git status --porcelain -u | grep '^??' | wc -l)
    (( $untracked )) && hook_com[unstaged]="✗${hook_com[unstaged]}"
}

prompt_caedus_precmd() {
    vcs_info

    PROMPT='\
${stop}$(prompt_caedus_remote)$(prompt_caedus_path)$(prompt_caedus_git)%f
 %(1j.${stop/$default_c/$jobs_c}.${stop}) %(!.%F{$root_c}.%F{$default_c})>%f%(?.%F{$default_c}.%F{$error_c})>%f '
    RPROMPT=''
    SPROMPT='zsh: correct %F{$error_c}%R%f to %F{$default_c}%r%f [nyae]? '
}

function prompt_caedus_setup() {
    default_c="3"
    error_c="1"
    root_c="1"
    jobs_c="6"
    stop="%F{$default_c}::%f"

    autoload -Uz add-zsh-hook
    autoload -Uz vcs_info

    zstyle ':vcs_info:*' enable git
    zstyle ':vcs_info:*' get-revision true
    zstyle ':vcs_info:*' check-for-changes true                 # enable both '%u' and '%c'
    zstyle ':vcs_info:*' check-for-staged-changes false         # enable only '%c'
    zstyle ':vcs_info:*' unstagedstr "⚡"
    zstyle ':vcs_info:*' stagedstr "→"
    zstyle ':vcs_info:*' patch-format "(%n/%c)"
    zstyle ':vcs_info:git:*' formats "%F{2}%.7i%f:%F{2}%b%f [%F{1}%u%f%F{2}%c%f]"
    zstyle ':vcs_info:git:*' actionformats "%F{5}%a%m%f|%F{2}%b%f [%F{1}%u%f%F{2}%c%f]"
    zstyle ':vcs_info:git*+set-message:*' hooks git-branch git-stash git-dirty
    zstyle ':vcs_info:git:*:-all-' command =git

    add-zsh-hook precmd prompt_caedus_precmd
    prompt_opts=(cr subst percent)
}

prompt_caedus_setup "${@}"

# vim:filetype=zsh:textwidth=100
